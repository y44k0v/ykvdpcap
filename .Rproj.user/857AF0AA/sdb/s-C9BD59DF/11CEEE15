{
    "collab_server" : "",
    "contents" : "#tests for file reading and data processing\n\ntest_that(\"filename is valid\",{\n        expect_that(eq_data_read(\"file_not_here\"),throws_error())\n})\n\ntest_that(\"eq_data_read returns a tbl_df\", {\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        expect_is(eq_data_read(filename), \"tbl_df\")\n})\n\ntest_that(\"required column present in data\",{\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        eq_raw2 <- eq_data_read(filename) %>% dplyr::select(- LOCATION_NAME)\n\n        expect_that(eq_clean_data(eq_raw2),throws_error())\n        expect_that(eq_location_clean(eq_raw2),throws_error())\n})\n\ntest_that(\"eq_clean_data generates correct column types\", {\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        eq_clean <- eq_data_read(filename) %>% eq_clean_data()\n        expect_is(eq_clean$DATE,\"Date\")\n        expect_is(eq_clean$LATITUDE,\"numeric\")\n        expect_is(eq_clean$LONGITUDE, \"numeric\")\n        expect_is(eq_clean$EQ_PRIMARY, \"numeric\")\n        expect_is(eq_clean$DEATHS, \"numeric\")\n})\n\ntest_that(\"eq_location_clean changes LOCATION_NAME\", {\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        eq_raw <- eq_data_read(filename)\n        eq_loc_clean <- eq_location_clean(eq_raw)\n        expect_that(any(eq_raw$LOCATION_NAME != eq_loc_clean$LOCATION_NAME),is_true())\n})\n\n#tests for timeline visualization\n\ntest_that(\"values for timeline arguments are correct\",{\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        sample_USA <- eq_data_read(filename) %>% eq_clean_data() %>%\n                dplyr::filter((COUNTRY==\"USA\") & lubridate::year(DATE) >= 2000)\n\n        #call to eq_time\n        expect_that(eq_time(eq_clean=sample_USA,y=\"LOCATION_NAME\"),throws_error())\n        expect_that(eq_time(eq_clean=sample_USA,color=\"LOCATION_NAME\"),throws_error())\n        expect_that(eq_time(eq_clean=sample_USA,size=\"LOCATION_NAME\"),throws_error())\n        expect_that(eq_time(eq_clean=sample_USA,timeline_label=\"MAYBE\"),gives_warning())\n        expect_that(eq_time(eq_clean=sample_USA,timeline_label=TRUE,n_max=\"no\"),gives_warning())\n        expect_that(eq_time(eq_clean=sample_USA,alpha=10),gives_warning())\n        expect_that(eq_time(eq_clean=sample_USA,alpha=\"no\"),gives_warning())\n\n        #no DATE\n        sample_USA2 <- sample_USA %>% dplyr::select(- DATE)\n        expect_that(eq_time(sample_USA2),throws_error())\n\n})\n\n\ntest_that(\"visualizations are created\", {\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        sample_USA <- eq_data_read(filename) %>% eq_clean_data() %>%\n                dplyr::filter((COUNTRY==\"USA\") & lubridate::year(DATE) >= 2000)\n\n        #geom_timeline\n        timeline <- ggplot(sample_USA) +\n                geom_timeline(aes(x=DATE,size=EQ_PRIMARY,color=DEATHS),alpha=0.5)\n\n        expect_that(timeline, is_a(\"ggplot\"))\n        expect_that(timeline$layers[[1]]$geom,is_a(\"GeomTimeLine\"))\n\n        #geom_timeline_label\n        timeline_label <- ggplot(data = sample_USA, aes(x=DATE)) + geom_timeline() +\n                geom_timeline_label(data=sample_USA,aes(label=LOCATION_NAME),n_max=8)\n\n        expect_that(timeline_label, is_a(\"ggplot\"))\n        expect_that(timeline_label$layers[[2]]$geom,is_a(\"GeomTimeLineLabel\"))\n})\n\n#tests for map visualization\n\ntest_that(\"eq_map columns and annot_col are present\",{\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        sample_MEXICO <- eq_data_read(filename) %>% eq_clean_data() %>%\n                dplyr::filter(COUNTRY == \"MEXICO\" & lubridate::year(DATE) >= 2000)\n\n        expect_that(eq_map(eq_clean=sample_MEXICO,annot_col=\"hello\"),gives_warning())\n\n        sample_MEXICO2 <- sample_MEXICO %>% dplyr::select(- LATITUDE)\n        expect_that(eq_map(eq_clean=sample_MEXICO2,annot_col=\"DATE\"),throws_error())\n\n        sample_MEXICO2 <- sample_MEXICO %>% dplyr::select(- LOCATION_NAME)\n        expect_that(eq_create_label(sample_MEXICO2),throws_error())\n\n})\n\ntest_that(\"eq_create_label creates a text column\",{\n        filename <- system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        sample_MEXICO_popup <- eq_data_read(filename) %>% eq_clean_data() %>%\n                dplyr::filter(COUNTRY == \"MEXICO\" & lubridate::year(DATE) >= 2000) %>%\n                dplyr::mutate(popup_text = eq_create_label(.))\n\n        expect_that(sample_MEXICO_popup$popup_text, is_a(\"character\"))\n})\n\n\ntest_that(\"eq_map creates leaflet visualization\", {\n        filename<-system.file(\"extdata\",\"data.gz\",package=\"ykvdpcap\")\n        sample_MEXICO_map <- eq_data_read(filename) %>% eq_clean_data() %>%\n                dplyr::filter(COUNTRY == \"MEXICO\" & lubridate::year(DATE) >= 2000) %>%\n                eq_map(annot_col = \"DATE\")\n\n        expect_that(sample_MEXICO_map, is_a(\"leaflet\"))\n})\n\n",
    "created" : 1500535735633.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1204413566",
    "id" : "11CEEE15",
    "lastKnownWriteTime" : 1500570498,
    "last_content_update" : 1500570498187,
    "path" : "C:/Users/win10/Desktop/Coursera/Rpackages/ykvdpcap/tests/testthat/test_functions.R",
    "project_path" : "tests/testthat/test_functions.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}