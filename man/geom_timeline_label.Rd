% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/earthquake_functions.R
\name{geom_timeline_label}
\alias{geom_timeline_label}
\title{Create a timeline label geom}
\usage{
geom_timeline_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, n_max = 5, ...)
}
\arguments{
\item{mapping}{A set of aesthetic mappings.  If null, uses the
default setting in ggplot()}

\item{data}{A dataset If null, uses the default data specified
in ggplot()}

\item{stat}{The name of the statistical transformation to use.
Identity means keep the data as is.}

\item{position}{The method used to adjust overlapping objects.
Identity means keep the position as is.}

\item{na.rm}{Flag to remove values with NA}

\item{show.legend}{Flag to say whether layer should be present in legend.}

\item{inherit.aes}{Flag to say whether default aesthetics should be inherited.}

\item{n_max}{The number of earthquakes to be labeled.  The earthquakes
with n_max highest magnitudes will be labeled.}

\item{...}{Additional arguments passed to layer()}
}
\value{
This function returns a layer that can be added to a plot
  using the ggplot function
}
\description{
This function adds a geom which displays labels for points on
a timeline for NOAA earthquake data.  This is the basic label
visualization without additional modifications.  For a cleaner
visualization the wrapper function, eq_time, should be used.
}
\note{
The parameters for GeomTimeLineLabel include columns from the earthquake data:
  Required parameters: x=DATE, label=LOCATION_NAME
  Optional parameters: n_max=x where x
  is the number of earthquakes with the highest
  magnitude to label.
}
\examples{
\dontrun{
sample_USA <- readr::read_delim(filename, delim = "\\t") \%>\%
eq_clean_data() \%>\%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2000)

ggplot(data = sample_USA, aes(x=DATE)) + geom_timeline() +
geom_timeline_label(data=sample_USA,aes(label=LOCATION_NAME),n_max=8) + theme_classic()

ggplot() +
geom_timeline_label(data=sample_USA,aes(x=DATE,label=LOCATION_NAME))

sample_2_countries<- readr::read_delim(filename, delim = "\\t") \%>\%
eq_clean_data() \%>\%
dplyr::filter((COUNTRY=="USA" | COUNTRY=="CHINA") & lubridate::year(DATE) >= 2000)

ggplot() +
geom_timeline_label(data=sample_2_countries,aes(x=DATE,y=COUNTRY,label=LOCATION_NAME))
}

}
